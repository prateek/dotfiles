{
  // ============================================================================
  // EDITOR SETTINGS
  // ============================================================================
  "editor.fontSize": 13,
  "editor.tabSize": 2,
  "editor.insertSpaces": true,
  "editor.formatOnSave": true,
  "editor.minimap.enabled": false,
  "editor.minimap.renderCharacters": false,
  "editor.scrollBeyondLastLine": false,
  "editor.renderWhitespace": "none",
  "editor.bracketPairColorization.enabled": true,
  "editor.inlineSuggest.enabled": true,
  "editor.suggest.insertMode": "replace",
  "editor.quickSuggestionsDelay": 300,
  "editor.quickSuggestions": {
    "other": false,
    "comments": false,
    "strings": false
  },
  "editor.codeActionsOnSave": {},

  // ============================================================================
  // WORKBENCH SETTINGS
  // ============================================================================
  "workbench.colorTheme": "Default Dark+",
  "workbench.startupEditor": "welcomePageInEmptyWorkbench",
  "workbench.editor.enablePreview": false,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "window.zoomLevel": 2,
  "window.newWindowDimensions": "inherit",
  "window.commandCenter": true,

  // ============================================================================
  // EXPLORER SETTINGS
  // ============================================================================
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmDelete": false,
  "explorer.excludeGitIgnore": false,
  "breadcrumbs.enabled": true,
  "outline.collapseItems": "alwaysCollapse",

  // ============================================================================
  // FILES SETTINGS
  // ============================================================================
  "files.autoSave": "off",
  "files.autoSaveDelay": 3000,
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.exclude": {
    "**/__pycache__": true,
    "**/_build": true,
    "**/.classpath": true,
    "**/.DS_Store": true,
    "**/.factorypath": true,
    "**/.git": true,
    "**/.mypy_cache": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.tmp": true,
    "**/*.egg-info": true,
    "**/*.egg": true,
    "**/*.test": true,
    "**/coverage.html": true,
    "go-build/.go": true,
    "Godeps/_workspace": true,
    "vendor": true,
    "bazel-*": true,
    "pkg/mod/**": true
  },
  "files.watcherExclude": {
    "**/bazel*/**": true,
    "pkg/mod/**": true
  },

  // ============================================================================
  // LANGUAGE-SPECIFIC SETTINGS
  // ============================================================================
  "[json][jsonc]": {
    "editor.formatOnSave": false,
    "editor.codeActionsOnSave": {
      "source.fixAll": "never"
    },
    "editor.renderWhitespace": "none"
  },
  "[go]": {
    "editor.insertSpaces": false,
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "never"
    },
    "editor.tabSize": 4
  },

  // ============================================================================
  // GO LANGUAGE SETTINGS
  // ============================================================================
  "go.toolsManagement.autoUpdate": true,
  "go.testOnSave": false,
  "go.lintOnSave": "off",
  "go.lintTool": "golangci-lint",
  "go.lintFlags": [],
  "go.vetOnSave": "package",
  "go.vetFlags": [],
  "go.buildFlags": [],
  "go.testTimeout": "20s",
  "go.testEnvVars": {},
  "go.testFlags": ["-v", "-count=1"],
  "go.formatTool": "custom",
  "go.formatFlags": [],
  "go.disableConcurrentTests": true,
  "go.coverOnSave": false,
  "go.coverOnTestPackage": false,
  "go.coverOnSingleTest": true,
  "go.coverageDecorator": {
    "type": "highlight",
    "coveredHighlightColor": "rgba(0, 255, 0, 0.15)",
    "uncoveredHighlightColor": "rgba(255, 0, 0, 0.15)",
    "coveredBorderColor": "rgba(0, 255, 0, 0.15)",
    "uncoveredBorderColor": "rgba(255, 0, 0, 0.15)",
    "coveredGutterStyle": "verticalgreen",
    "uncoveredGutterStyle": "verticalred"
  },
  "go.useCodeSnippetsOnFunctionSuggest": false,
  "go.useLanguageServer": true,
  "go.languageServerExperimentalFeatures": {
    "diagnostics": true
  },
  "go.delveConfig.hideSystemGoroutines": true,
  "go.editorContextMenuCommands": {
    "testAtCursor": false,
    "addImport": false,
    "testCoverage": false,
    "playground": false,
    "debugTestAtCursor": false
  },

  // ============================================================================
  // GOPLS (GO LANGUAGE SERVER) SETTINGS
  // ============================================================================
  "gopls": {
    "importShortcut": "Definition",
    "ui.diagnostic.staticcheck": false,
    "ui.semanticTokens": true,
    "build.directoryFilters": [
      "-**/bazel-out",
      "-**/bazel-go-code",
      "-**/bazel-pkgdrv",
      "-**/bazel-testlogs"
    ]
  },

  // ============================================================================
  // GIT SETTINGS
  // ============================================================================
  "git.confirmSync": false,
  "git.openRepositoryInParentFolders": "always",
  "git.enableSmartCommit": true,
  "git.autofetch": true,
  "git.autoRepositoryDetection": "subFolders",
  "git.detectSubmodules": false,
  "git.ignoredRepositories": [],
  "diffEditor.ignoreTrimWhitespace": false,

  // ============================================================================
  // GITLENS SETTINGS
  // ============================================================================
  "gitlens.graph.dimMergeCommits": true,
  "gitlens.currentLine.enabled": false,
  "gitlens.keymap": "alternate",
  "gitlens.views.repositories.files.layout": "list",
  "gitlens.hovers.annotations.over": "annotation",
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.menus": {
    "editor": {
      "remote": true
    }
  },
  "gitlens.advanced.messages": {
    "suppressCommitHasNoPreviousCommitWarning": false,
    "suppressCommitNotFoundWarning": false,
    "suppressFileNotUnderSourceControlWarning": false,
    "suppressGitVersionWarning": false,
    "suppressLineUncommittedWarning": false,
    "suppressNoRepositoryWarning": false
  },
  "gitlens.remotes": [
    {
      "domain": "code.uber.internal",
      "type": "Custom",
      "name": "Uber",
      "protocol": "gitolite",
      "urls": {
        "repository": "https://sourcegraph.uberinternal.com/code.uber.internal/${repo}",
        "branches": "https://sourcegraph.uberinternal.com/code.uber.internal/${repo}/-/branches",
        "branch": "https://sourcegraph.uberinternal.com/code.uber.internal/${repo}@${branch}",
        "commit": "https://sourcegraph.uberinternal.com/code.uber.internal/${repo}/-/commit/${id}",
        "file": "https://sourcegraph.uberinternal.com/code.uber.internal/${repo}@master/-/blob/${file}${line}",
        "fileInBranch": "https://sourcegraph.uberinternal.com/code.uber.internal/${repo}@${branch}/-/blob/${file}${line}",
        "fileInCommit": "https://sourcegraph.uberinternal.com/code.uber.internal/${repo}@${id}/-/blob/${file}${line}",
        "fileLine": "#L${line}",
        "fileRange": "#L${start}-${end}"
      }
    }
  ],

  // ============================================================================
  // VIM EXTENSION SETTINGS
  // ============================================================================
  "vim.targets.enable": true,
  "vim.visualstar": true,
  "vim.surround": true,
  "vim.useSystemClipboard": false,
  "vim.leader": "<space>",
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["[", " "],
      "after": ["O", "<Esc>", "j", "0"]
    },
    {
      "before": ["]", " "],
      "after": ["o", "<Esc>", "k", "0"]
    },
    {
      "before": ["[", "q"],
      "commands": ["editor.action.marker.prevInFiles"],
      "when": "editorTextFocus"
    },
    {
      "before": ["]", "q"],
      "commands": ["editor.action.marker.nextInFiles"],
      "when": "editorTextFocus"
    },
    {
      "before": ["[", "r"],
      "commands": ["references-view.prev"],
      "when": "reference-list.hasResult || (inReferenceSearchEditor || referenceSearchVisible)"
    },
    {
      "before": ["]", "r"],
      "commands": ["references-view.next"],
      "when": "reference-list.hasResult || (inReferenceSearchEditor || referenceSearchVisible)"
    },
    {
      "before": ["[", "c"],
      "commands": ["workbench.action.editor.previousChange"],
      "when": "editorTextFocus"
    },
    {
      "before": ["]", "c"],
      "commands": ["workbench.action.editor.nextChange"],
      "when": "editorTextFocus"
    },
    {
      "before": ["[", "f"],
      "commands": ["search.action.focusPreviousSearchResult"],
      "when": "hasSearchResult"
    },
    {
      "before": ["]", "f"],
      "commands": ["search.action.focusNextSearchResult"],
      "when": "hasSearchResult"
    },
    {
      "before": ["c", "o", "w"],
      "commands": ["editor.action.toggleWordWrap"]
    },
    {
      "before": ["c", "o", "l"],
      "commands": ["editor.action.toggleRenderWhitespace"]
    },
    {
      "before": ["<leader>", "m"],
      "commands": ["bookmarks.toggle"]
    },
    {
      "before": ["<leader>", "b"],
      "commands": ["bookmarks.list"]
    },
    {
      "before": ["c", "s", "w"],
      "after": ["v", "i", "w", "S"]
    },
    {
      "before": ["c", "s", "W"],
      "after": ["v", "i", "W", "S"]
    },
    {
      "before": ["C-I"],
      "commands": ["workbench.action.navigateBack"]
    },
    {
      "before": ["C-O"],
      "commands": ["workbench.action.navigateForward"]
    },
    {
      "before": ["g", "D"],
      "after": ["*", "g", "g", "n"]
    },
    {
      "before": ["g", "I"],
      "commands": ["references-view.findImplementations"],
      "when": "editorHasReferenceProvider"
    },
    {
      "before": ["g", "u"],
      "commands": ["editor.action.goToReferences"],
      "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
      "before": ["g", "U"],
      "commands": ["references-view.find"],
      "when": "editorHasReferenceProvider"
    },
    {
      "before": ["g", "H"],
      "commands": ["editor.action.showDefinitionPreviewHover"]
    },
    {
      "before": ["g", "Leader", "h"],
      "commands": ["editor.action.peekDefinition"],
      "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
      "before": ["g", "Leader", "H"],
      "commands": ["editor.action.peekImplementation"],
      "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
      "before": ["g", "Leader", "Leader", "h"],
      "commands": ["editor.action.peekTypeDefinition"]
    },
    {
      "before": ["C-W", "c"],
      "commands": ["workbench.action.closeGroup"]
    },
    {
      "before": [":"],
      "after": [";"]
    },
    {
      "before": [";"],
      "after": [":"]
    },
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    {
      "before": ["u"],
      "after": [],
      "commands": [{"command": "undo"}]
    },
    {
      "before": ["<C-r>"],
      "after": [],
      "commands": [{"command": "redo"}]
    },
    {
      "before": ["leader", "c", "v"],
      "commands": ["workbench.action.openApplicationSettingsJson"]
    }
  ],

  // ============================================================================
  // GITHUB COPILOT SETTINGS
  // ============================================================================
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": false,
    "scminput": false
  },
  "github.copilot.editor.enableAutoCompletions": false,
  "github.copilot.nextEditSuggestions.enabled": true,

  // ============================================================================
  // OTHER LANGUAGE/TOOL SETTINGS
  // ============================================================================
  "javascript.autoClosingTags": false,
  "typescript.autoClosingTags": false,
  "python.venvPath": "${workspaceFolder}/.venv",
  "markdown.marp.enableHtml": true,
  "markdown.marp.pdf.noteAnnotations": true,
  "bazel.pathsToIgnore": [".*"],
  "haskell.manageHLS": "GHCup",
  "haskell.checkProject": false,

  // NOTE: Zig paths are user-specific - configure these in User Settings
  // "zig.zigPath": "...",
  // "zig.zls.path": "...",
  // "zig.zigVersion": "...",
  // "zig.zls.enableInlayHints": false,

  // ============================================================================
  // TERMINAL SETTINGS
  // ============================================================================
  "terminal.integrated.enableMultiLinePasteWarning": false,
  "terminal.integrated.profiles.linux": {
    "bash": {
      "path": "bash",
      "env": {"SHELL": "/bin/bash"}
    },
    "zsh": {
      "path": "zsh",
      "env": {"SHELL": "/bin/zsh"}
    },
    "bash(login)": {
      "path": "bash",
      "args": ["-l"],
      "env": {"SHELL": "/bin/bash"}
    },
    "zsh(login)": {
      "path": "zsh",
      "args": ["-l"],
      "env": {"SHELL": "/bin/zsh"}
    }
  },

  // ============================================================================
  // NOTEBOOK SETTINGS
  // ============================================================================
  "notebook.lineNumbers": "on",
  "ipynb.pasteImagesAsAttachments.enabled": false,
  "jupyter.askForKernelRestart": false,

  // ============================================================================
  // EXTENSIONS & SECURITY
  // ============================================================================
  "extensions.ignoreRecommendations": true,
  "extensions.showRecommendationsOnlyOnDemand": true,
  "security.workspace.trust.untrustedFiles": "open",
  "remote.SSH.enableAgentForwarding": false,

  // ============================================================================
  // DEBUG SETTINGS
  // ============================================================================
  "debug.onTaskErrors": "debugAnyway"
}
